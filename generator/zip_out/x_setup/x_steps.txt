###### ACTIVE RECORD ######
$ bundle
$ be rake -T
$ be rake db:create

$ be rake generate:migration NAME=create_dogs
$ be rake generate:migration NAME=create_owners
$ be rake generate:migration NAME=create_ratings

$ be rake generate:model NAME=Dog
$ be rake generate:model NAME=Owner
$ be rake generate:model NAME=Rating

$ be rake db:migrate

$ be rake console
  ApplicationRecord.connection.tables
  ApplicationRecord.connection.columns(:dogs)
  Dog
  Dog.all
  exit

$ be rake db:rollback
$ be rake db:drop

####### MIGRATIONS #######
create_table :dogs do |t|
  t.string :name
  t.integer :owner_id
end

create_table :owners do |t|
  t.string :name
end

create_table :ratings do |t|
  t.integer :rating
  t.integer :owner_id
  t.integer :dog_id
end

######## MODELS ########
class Dog < ApplicationRecord
  belongs_to :owner
  has_many :ratings
end

class Owner < ApplicationRecord
  has_many :dogs, { :foreign_key => :owner_id }
  has_many :ratings, { :foreign_key => :rating_id }
end

class Rating < ApplicationRecord
  belongs_to :dog
  belongs_to :owner
end

##### ADD/EDIT/QUERY #####
new_rating = Rating.new(rating: 5)
new_rating.create_dog(name: 'Spot', owner_id: 1)
new_rating.save

spot = Dog.find_by(name: 'Spot')
new_rating = Rating.new(owner_id: 2, dog: spot, rating: 8)
new_rating.save

new_rating.dog
jayda = Dog.find_by(name: 'Jayda')
new_rating.assign_attributes(judge_id: 1, dog: jayda)
new_rating
new_rating.dog

##################################

class CreateSubscriptions < ActiveRecord::Migration[5.0]
  def change
    create_table :subscriptions do |t|
      t.integer :user_id, null: false
			t.integer :channel_id, null: false

      t.timestamps null: false
    end

    add_index :subscriptions, [:user_id, :channel_id], :unique => true
    add_index :subscriptions, :channel_id
  end
end

####################################

class Channel < ActiveRecord::Base
  has_many :subscriptions
  has_many :users, through: :subscriptions
end

class Subscription < ActiveRecord::Base
  belongs_to :channel
  belongs_to :user
end

class User < ActiveRecord::Base
  validates :first_name, :last_name, :email, :pw_hash, presence: true
  validates :email, uniqueness: true

  has_many :subscriptions
  has_many :channels, through: :subscriptions

  ..... more...
end
